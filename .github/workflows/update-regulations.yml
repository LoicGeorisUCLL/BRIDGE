# .github/workflows/update-regulations.yml
name: Update Bridge Regulations

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      regulations_url:
        description: 'URL of the regulations HTML page'
        required: true
        default: 'bridgeregulations.up.railway.app'
  
  # Scheduled trigger (daily at 3 AM UTC)
#   schedule:
#     - cron: '0 3 * * *'

env:
  NODE_VERSION: '18'
  REGULATIONS_URL: ${{ github.event.inputs.regulations_url || secrets.REGULATIONS_URL }}

jobs:
  update-regulations:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: |
        npm ci
        npm install -g tsx
    
    - name: 🔍 Check for regulation changes
      id: check_changes
      run: |
        # Download current regulations and compare with last known state
        curl -s "$REGULATIONS_URL" > current_regulations.html
        
        if [ -f "regulation-metadata.json" ]; then
          # Compare with previous version
          if diff -q current_regulations.html previous_regulations.html > /dev/null 2>&1; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in regulations"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in regulations"
          fi
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "First run - processing regulations"
        fi
        
        # Save current state
        cp current_regulations.html previous_regulations.html
    
    - name: 🤖 Update logic with new regulations
      if: steps.check_changes.outputs.has_changes == 'true'
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "Updating logic based on new regulations..."
        tsx regulation-scraper.ts "$REGULATIONS_URL"
    
    - name: 🔨 Build and test
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        npm run build
        npm run test
    
    - name: 📤 Commit and push changes
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add src/logic.tsx regulation-metadata.json
        git commit -m "🤖 Auto-update: Regulations updated on $(date)"
        git push